{"ast":null,"code":"// Arquivo: frontend/src/services/adminService.js\n\nimport api from './api';\n\n// ==================== JOGOS ====================\nexport const adminGameService = {\n  getAll: async () => {\n    const response = await api.get('/admin/games');\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/admin/games/${id}`);\n    return response.data;\n  },\n  create: async gameData => {\n    const response = await api.post('/admin/games', gameData);\n    return response.data;\n  },\n  update: async (id, gameData) => {\n    const response = await api.put(`/admin/games/${id}`, gameData);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/admin/games/${id}`);\n    return response.data;\n  },\n  toggleStatus: async id => {\n    const response = await api.patch(`/admin/games/${id}/toggle`);\n    return response.data;\n  }\n};\n\n// ==================== PRÊMIOS ====================\nexport const adminPrizeService = {\n  addToGame: async (gameId, prizeData) => {\n    const response = await api.post(`/admin/games/${gameId}/prizes`, prizeData);\n    return response.data;\n  },\n  update: async (prizeId, prizeData) => {\n    const response = await api.put(`/admin/prizes/${prizeId}`, prizeData);\n    return response.data;\n  },\n  delete: async prizeId => {\n    const response = await api.delete(`/admin/prizes/${prizeId}`);\n    return response.data;\n  }\n};\n\n// ==================== USUÁRIOS ====================\nexport const adminUserService = {\n  getAll: async () => {\n    const response = await api.get('/admin/users');\n    return response.data;\n  },\n  getDetails: async id => {\n    const response = await api.get(`/admin/users/${id}`);\n    return response.data;\n  }\n};\n\n// ==================== TRANSAÇÕES ====================\nexport const adminTransactionService = {\n  getAll: async (params = {}) => {\n    const response = await api.get('/admin/transactions', {\n      params\n    });\n    return response.data;\n  },\n  getPendingWithdrawals: async () => {\n    const response = await api.get('/admin/transactions/withdrawals/pending');\n    return response.data;\n  },\n  approve: async (id, externalReference) => {\n    const response = await api.patch(`/admin/transactions/${id}/approve`, {\n      externalReference\n    });\n    return response.data;\n  },\n  reject: async (id, reason) => {\n    const response = await api.patch(`/admin/transactions/${id}/reject`, {\n      reason\n    });\n    return response.data;\n  }\n};\n\n// ==================== CUPONS ====================\nexport const adminCouponService = {\n  getAll: async () => {\n    const response = await api.get('/admin/coupons');\n    return response.data;\n  },\n  create: async couponData => {\n    const response = await api.post('/admin/coupons', couponData);\n    return response.data;\n  },\n  update: async (id, couponData) => {\n    const response = await api.put(`/admin/coupons/${id}`, couponData);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/admin/coupons/${id}`);\n    return response.data;\n  }\n};\n\n// ==================== RELATÓRIOS ====================\nexport const adminReportService = {\n  getDashboardStats: async () => {\n    const response = await api.get('/admin/dashboard/stats');\n    return response.data;\n  },\n  getRevenueReport: async (startDate, endDate) => {\n    const response = await api.get('/admin/reports/revenue', {\n      params: {\n        startDate,\n        endDate\n      }\n    });\n    return response.data;\n  },\n  getGamePerformance: async () => {\n    const response = await api.get('/admin/reports/game-performance');\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","adminGameService","getAll","response","get","data","getById","id","create","gameData","post","update","put","delete","toggleStatus","patch","adminPrizeService","addToGame","gameId","prizeData","prizeId","adminUserService","getDetails","adminTransactionService","params","getPendingWithdrawals","approve","externalReference","reject","reason","adminCouponService","couponData","adminReportService","getDashboardStats","getRevenueReport","startDate","endDate","getGamePerformance"],"sources":["C:/Users/victo/OneDrive/Área de Trabalho/raspadinha igame/frontend/src/services/adminService.js"],"sourcesContent":["// Arquivo: frontend/src/services/adminService.js\r\n\r\nimport api from './api';\r\n\r\n// ==================== JOGOS ====================\r\nexport const adminGameService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/admin/games');\r\n    return response.data;\r\n  },\r\n\r\n  getById: async (id) => {\r\n    const response = await api.get(`/admin/games/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  create: async (gameData) => {\r\n    const response = await api.post('/admin/games', gameData);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, gameData) => {\r\n    const response = await api.put(`/admin/games/${id}`, gameData);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/admin/games/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  toggleStatus: async (id) => {\r\n    const response = await api.patch(`/admin/games/${id}/toggle`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// ==================== PRÊMIOS ====================\r\nexport const adminPrizeService = {\r\n  addToGame: async (gameId, prizeData) => {\r\n    const response = await api.post(`/admin/games/${gameId}/prizes`, prizeData);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (prizeId, prizeData) => {\r\n    const response = await api.put(`/admin/prizes/${prizeId}`, prizeData);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (prizeId) => {\r\n    const response = await api.delete(`/admin/prizes/${prizeId}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// ==================== USUÁRIOS ====================\r\nexport const adminUserService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/admin/users');\r\n    return response.data;\r\n  },\r\n\r\n  getDetails: async (id) => {\r\n    const response = await api.get(`/admin/users/${id}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// ==================== TRANSAÇÕES ====================\r\nexport const adminTransactionService = {\r\n  getAll: async (params = {}) => {\r\n    const response = await api.get('/admin/transactions', { params });\r\n    return response.data;\r\n  },\r\n\r\n  getPendingWithdrawals: async () => {\r\n    const response = await api.get('/admin/transactions/withdrawals/pending');\r\n    return response.data;\r\n  },\r\n\r\n  approve: async (id, externalReference) => {\r\n    const response = await api.patch(`/admin/transactions/${id}/approve`, {\r\n      externalReference\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  reject: async (id, reason) => {\r\n    const response = await api.patch(`/admin/transactions/${id}/reject`, {\r\n      reason\r\n    });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// ==================== CUPONS ====================\r\nexport const adminCouponService = {\r\n  getAll: async () => {\r\n    const response = await api.get('/admin/coupons');\r\n    return response.data;\r\n  },\r\n\r\n  create: async (couponData) => {\r\n    const response = await api.post('/admin/coupons', couponData);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id, couponData) => {\r\n    const response = await api.put(`/admin/coupons/${id}`, couponData);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/admin/coupons/${id}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// ==================== RELATÓRIOS ====================\r\nexport const adminReportService = {\r\n  getDashboardStats: async () => {\r\n    const response = await api.get('/admin/dashboard/stats');\r\n    return response.data;\r\n  },\r\n\r\n  getRevenueReport: async (startDate, endDate) => {\r\n    const response = await api.get('/admin/reports/revenue', {\r\n      params: { startDate, endDate }\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  getGamePerformance: async () => {\r\n    const response = await api.get('/admin/reports/game-performance');\r\n    return response.data;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}