{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\raspadinha igame\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Arquivo: frontend/src/contexts/AuthContext.js\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, registerUser, validateToken } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Verifica se há um token válido ao carregar a aplicação\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const userData = await validateToken();\n          setUser(userData.user);\n        } catch (error) {\n          console.error('Token inválido:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await loginUser(email, password);\n      const {\n        token: newToken,\n        user: userData\n      } = response;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || 'Erro ao fazer login'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await registerUser(userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(newUser);\n      return {\n        success: true,\n        user: newUser\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || 'Erro ao fazer cadastro'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  const updateUser = userData => {\n    setUser(prev => ({\n      ...prev,\n      ...userData\n    }));\n  };\n  const isAuthenticated = () => {\n    return !!user && !!token;\n  };\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loginUser","registerUser","validateToken","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuth","userData","error","console","logout","login","email","password","response","newToken","setItem","success","message","register","newUser","removeItem","updateUser","prev","isAuthenticated","isAdmin","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/victo/OneDrive/Área de Trabalho/raspadinha igame/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// Arquivo: frontend/src/contexts/AuthContext.js\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { loginUser, registerUser, validateToken } from '../services/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Verifica se há um token válido ao carregar a aplicação\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const userData = await validateToken();\r\n          setUser(userData.user);\r\n        } catch (error) {\r\n          console.error('Token inválido:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await loginUser(email, password);\r\n      const { token: newToken, user: userData } = response;\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      \r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.message || 'Erro ao fazer login' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await registerUser(userData);\r\n      const { token: newToken, user: newUser } = response;\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      setToken(newToken);\r\n      setUser(newUser);\r\n      \r\n      return { success: true, user: newUser };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.message || 'Erro ao fazer cadastro' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    setUser(prev => ({ ...prev, ...userData }));\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return !!user && !!token;\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user && user.role === 'admin';\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    isAuthenticated,\r\n    isAdmin\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGX,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAACqB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEjE;EACArB,SAAS,CAAC,MAAM;IACd,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIJ,KAAK,EAAE;QACT,IAAI;UACF,MAAMK,QAAQ,GAAG,MAAMpB,aAAa,CAAC,CAAC;UACtCY,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC;QACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;UACvCE,MAAM,CAAC,CAAC;QACV;MACF;MACAT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7B,SAAS,CAAC2B,KAAK,EAAEC,QAAQ,CAAC;MACjD,MAAM;QAAEX,KAAK,EAAEa,QAAQ;QAAEjB,IAAI,EAAES;MAAS,CAAC,GAAGO,QAAQ;MAEpDV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;MACvCZ,QAAQ,CAACY,QAAQ,CAAC;MAClBhB,OAAO,CAACQ,QAAQ,CAAC;MAEjB,OAAO;QAAEU,OAAO,EAAE,IAAI;QAAEnB,IAAI,EAAES;MAAS,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QACLS,OAAO,EAAE,KAAK;QACdC,OAAO,EAAEV,KAAK,CAACU,OAAO,IAAI;MAC5B,CAAC;IACH;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOZ,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAM5B,YAAY,CAACqB,QAAQ,CAAC;MAC7C,MAAM;QAAEL,KAAK,EAAEa,QAAQ;QAAEjB,IAAI,EAAEsB;MAAQ,CAAC,GAAGN,QAAQ;MAEnDV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;MACvCZ,QAAQ,CAACY,QAAQ,CAAC;MAClBhB,OAAO,CAACqB,OAAO,CAAC;MAEhB,OAAO;QAAEH,OAAO,EAAE,IAAI;QAAEnB,IAAI,EAAEsB;MAAQ,CAAC;IACzC,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACd,OAAO;QACLS,OAAO,EAAE,KAAK;QACdC,OAAO,EAAEV,KAAK,CAACU,OAAO,IAAI;MAC5B,CAAC;IACH;EACF,CAAC;EAED,MAAMR,MAAM,GAAGA,CAAA,KAAM;IACnBN,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAChClB,QAAQ,CAAC,IAAI,CAAC;IACdJ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMuB,UAAU,GAAIf,QAAQ,IAAK;IAC/BR,OAAO,CAACwB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,GAAGhB;IAAS,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMiB,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAO,CAAC,CAAC1B,IAAI,IAAI,CAAC,CAACI,KAAK;EAC1B,CAAC;EAED,MAAMuB,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAO3B,IAAI,IAAIA,IAAI,CAAC4B,IAAI,KAAK,OAAO;EACtC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZ7B,IAAI;IACJE,OAAO;IACPW,KAAK;IACLQ,QAAQ;IACRT,MAAM;IACNY,UAAU;IACVE,eAAe;IACfC;EACF,CAAC;EAED,oBACEpC,OAAA,CAACC,WAAW,CAACsC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA/B,QAAA,EAChCA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnC,GAAA,CA7FWF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}