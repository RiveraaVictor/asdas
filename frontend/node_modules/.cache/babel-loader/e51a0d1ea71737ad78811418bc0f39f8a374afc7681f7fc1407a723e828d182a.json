{"ast":null,"code":"// Arquivo: frontend/src/services/api.js (ATUALIZADO)\nimport axios from 'axios';\n\n// Cria uma instância do Axios com a URL base da nossa API\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api'\n});\n\n// Interceptor para adicionar o token automaticamente nas requisições\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para tratar respostas e renovar token se necessário\napi.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // Se receber 401 e não for uma tentativa de retry\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n\n    // Remove token inválido\n    localStorage.removeItem('token');\n\n    // Redireciona para login se não estiver já na página de login\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Função de login que podemos chamar de qualquer lugar na aplicação\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Erro de conexão'\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","removeItem","window","location","pathname","includes","href","loginUser","email","password","post","data","_error$response2","message"],"sources":["C:/Users/victo/OneDrive/Área de Trabalho/raspadinha igame/frontend/src/services/api.js"],"sourcesContent":["// Arquivo: frontend/src/services/api.js (ATUALIZADO)\r\nimport axios from 'axios';\r\n\r\n// Cria uma instância do Axios com a URL base da nossa API\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001/api'\r\n});\r\n\r\n// Interceptor para adicionar o token automaticamente nas requisições\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor para tratar respostas e renovar token se necessário\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Se receber 401 e não for uma tentativa de retry\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      // Remove token inválido\r\n      localStorage.removeItem('token');\r\n      \r\n      // Redireciona para login se não estiver já na página de login\r\n      if (!window.location.pathname.includes('/login')) {\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Função de login que podemos chamar de qualquer lugar na aplicação\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Erro de conexão' };\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACN,MAAM;;EAEpC;EACA,IAAI,EAAAU,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;;IAE7B;IACAX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;;IAEhC;IACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAChDH,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAG,QAAQ;IACjC;EACF;EAEA,OAAOZ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMc,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMf,GAAG,CAAC6B,IAAI,CAAC,aAAa,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnE,OAAOb,QAAQ,CAACe,IAAI;EACtB,CAAC,CAAC,OAAOlB,KAAK,EAAE;IAAA,IAAAmB,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAnB,KAAK,CAACG,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBD,IAAI,KAAI;MAAEE,OAAO,EAAE;IAAkB,CAAC;EAC9D;AACF,CAAC;AAED,eAAehC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}